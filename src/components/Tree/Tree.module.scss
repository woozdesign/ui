@use '@/styles/lib/mixins.scss';

.tree {
  list-style: none;
  line-height: 1.5;
}

.treeLabelWrapper {
  cursor: pointer;
  user-select: none;
  display: flex;
  align-items: center;
  width: 100%;
  gap: var(--space-2);
  &:hover {
    background-color: var(--color-accent-4);
  }

  &:active {
    background-color: var(--color-accent-4);
  }
}

.treeLabel {
  position: relative;
  height: 100%;
  display: flex;
  width: 100%;
  align-items: center;

  > .label {
    display: flex;
    gap: var(--space-2);
    align-items: center;
  }
}

.indent {
  display: inline-flex;
  align-self: stretch;
  justify-content: center;
}

.verticalLine {
  width: var(--space-4);
  display: flex;
  align-self: stretch;
  justify-content: center;
}

.toggleButton {
  display: flex;
  align-items: center;
  justify-content: center;
}

.treeItem {
  color: var(--color-gray-12);
  // Ensure full width hover effect
  display: block;
  width: 100%;
  &.hovered {
    background-color: var(--color-accent-4);
  }
}

.treeNested {
  padding-left: 0;
  transition: all 0.3s;
}

.wd-tree {
  @include mixins.breakpoints {
    &-xlarge {
      .treeLabelWrapper {
        height: var(--component-height-xlarge);
        font-size: var(--font-size-4);
        padding-left: var(--space-3);
      }
    }
    &-large {
      .treeLabelWrapper {
        height: var(--component-height-large);
        font-size: var(--font-size-4);
        padding-left: var(--space-3);
      }
    }
    &-medium {
      .treeLabelWrapper {
        height: var(--component-height-medium);
        font-size: var(--font-size-3);
        padding-left: var(--space-2);
      }
    }
    &-small {
      .treeLabelWrapper {
        height: var(--component-height-small);
        font-size: var(--font-size-2);
        padding-left: var(--space-1);
      }
    }
  }
}

.dragLine {
  height: var(--border-width);
  background-color: var(--color-accent-12); // Or any indicator color
  position: absolute;
  width: 100%;
  z-index: 9999; // Use a high number to ensure it's on top
}

.dragLineAbove {
  top: 0;
  margin-top: calc(var(--border-width) * -1);
}

.dragLineBelow {
  bottom: 0;
  margin-bottom: calc(var(--border-width) * -1);
}
